!function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=10)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=e.isBufferView=function(t){return t instanceof Int8Array||t instanceof Uint8Array||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array};e.isArrayBuffer=function(t){return t instanceof ArrayBuffer},e.arraycopy=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if((Array.isArray(t)||i(t))&&(Array.isArray(r)||i(r))){s=s||t.length;for(var l=e,o=n;l<s;l++,o++)r[o]=t[l]}},e.binarySearch=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if((Array.isArray(t)||i(t))&&r){for(var n=0,s=e-1,l=0,o=0;n<=s;)if((o=t[l=n+s>>>1])<r)n=l+1;else{if(!(o>r))return l;s=l-1}return~n}return-1},e.copyOf=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!t)return null;if(Array.isArray(t)){e=e||t.length;for(var r=new Array(e),n=0;n<e;n++)r[n]=t[n];return r}if(i(t)){e=e||t.length;for(var s=t.buffer,l=new ArrayBuffer(e),o=0;o<s.length;o++)l[o]=s[o];return new t.constructor(l)}var h={};for(var u in t)t.hasOwnProperty(u)&&(h[u]=t[u]);return h},e.fill=function(t,e){if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)t[r]=e},e.generateUUID=function(){var t=Date.now();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var r=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===e?r:3&r|8).toString(16)})},e.hashCode=function(t){var e=1;if("number"==typeof t)e=31*e+t;else if("boolean"==typeof t)e=31*e+(null!=t&&t?1:0);else if("string"==typeof t)for(var r=t.length;r--;)e=31*e+t.charCodeAt(r);else if(Array.isArray(t))for(var i=t.length,n=null;i--;)e=31*e+(null!==(n=t[i])?0:(void 0).hashCode(n));else e=null!=t?t.constructor===Date?31*e+t.getTime():t.constructor===RegExp?(void 0).hashCode(t.toString()):t.hasOwnProperty("hashCode")?31*e+t.hashCode():(void 0).hashCode(t.toString()):0;return e},e.hashCombine=function(t,e){return e^(void 0).hashCode(t)+2654435769+(e<<6)+(e>>2)},e.isAssignableFrom=function(t,e){return e.prototype instanceof t||e===t},e.isDefined=function(t){return null!==t&&void 0!==t}},function(t,e,r){"use strict";r.r(e),r.d(e,"Enumeration",function(){return i}),r.d(e,"Iterator",function(){return n}),r.d(e,"CircularIterator",function(){return s}),r.d(e,"Comparator",function(){return l});class i{constructor(t=[]){this.list=t,this.cursor=0}destroy(){this.list=this.cursor=null}hasMoreElements(){return this.cursor>=0&&this.cursor<this.list.length}nextElement(){let t=this.list[this.cursor];return this.cursor++,this.cursor===this.list.length&&this.destroy(),t}toString(){return`\n      Enumeration[cursor: ${this.cursor}, list: ${this.list.join(",")}]\n    `}}class n{constructor(t=[]){this.list=t,this.cursor=0}static div(t,e){return Math[t>0?"floor":"ceil"](t/e)}hasNext(){return this.cursor<this.list.length}hasPrevious(){return this.cursor>0}static mod(t,e){let r=t%e;return Math.floor(r>=0?r:r+e)}next(){if(this.cursor<0&&(this.cursor=0),this.cursor<this.list.length){let t=this.list[this.cursor];return this.cursor+=1,t}return null}previous(){if(this.cursor>=this.list.length&&(this.cursor=this.list.length-1),this.cursor>=0){let t=this.list[this.cursor];return this.cursor-=1,t}return null}remove(){this.cursor>0&&this.cursor<this.list.length&&this.list.splice(this.cursor,1)}static remain(t,e){return Math[t>0?"floor":"ceil"](t%e)}toString(){return`\n      Iterator[cursor: ${this.cursor}, list: ${this.list.join(",")}]\n    `}}class s extends n{constructor(t=[]){super(t)}next(){if(this.cursor<0&&(this.cursor=0),this.cursor<this.list.length){this.cursor+=1;let t=n.mod(this.cursor,this.list.length);return this.list[t]}return null}previous(){if(this.cursor>=this.list.length&&(this.cursor=this.list.length-1),this.cursor>=0){this.cursor-=1;let t=n.mod(this.cursor,this.list.length);return this.list[t]}return null}}class l{constructor(){}compare(t,e){if(null===t&&null===e||t===e)return 0;if(null!==t&&t.hasOwnProperty("compareTo")&&null!==t.compareTo)return t.compareTo(e);if(null!==e&&e.hasOwnProperty("compareTo")&&null!==e.compareTo)return e.compareTo(t);if("string"==typeof t&&"string"==typeof e){let r=t.length,i=e.length,n=0,s=0;for(let l=0,o=0;l<r&&o<i;l++,o++)if((n=t.charAt(l))!==(s=e.charAt(o))&&(n=n.toUpperCase())!==(s=s.toUpperCase())&&(n=n.toLowerCase())!==(s=s.toLowerCase()))return n.charCodeAt(0)-s.charCodeAt(0);return r-i}if("number"==typeof t&&"number"==typeof e)return t<e?-1:1;if("boolean"==typeof t&&"boolean"==typeof e)return~~t<~~e?-1:1;if("object"==typeof t&&"object"==typeof e){if(t.constructor===Object&&e.constructor===Object){let r=-1;for(let i in t)if(!t.hasOwnProperty(i)||!e.hasOwnProperty(i)||0!==(r=this.compare(t[i],e[i])))break;return r}if(Array.isArray(t)&&Array.isArray(e)){let r=t.length,i=e.length,n=this.compare(r,i);if(0===n){for(let s=0,l=0;s<r&&l<i&&0===(n=this.compare(t[s],e[l]));s++,l++);return r-i+n}return n}if(t instanceof ArrayBuffer&&e instanceof ArrayBuffer){let r=t.byteLength,i=e.byteLength,n=this.compare(r,i);if(0===n){let r=n,i=new Int8Array(t),s=new Int8Array(e);for(let t=0,e=0;t<r&&e<r&&0===(n=this.compare(i[t],s[e]));t++,e++);}return n}if(t instanceof DataView&&e instanceof DataView||t instanceof TypedArray&&e instanceof TypedArray)return this.compare(t.buffer,e.buffer);if(t instanceof Date&&e instanceof Date)return this.compare(t.getTime(),e.getTime());if(t instanceof Error&&e instanceof Error)return t.name===e.name?0:-1;if(t instanceof RegExp&&e instanceof RegExp)return this.compare(t.toString(),e.toString())}else if("function"==typeof t&&"function"==typeof e)return t===e;return-1}}},function(t,e,r){"use strict";r.r(e),r.d(e,"AbstractMap",function(){return i});class i{constructor(t={}){this.map=new Map,this.putAll(t)}clear(){this.map.clear()}clone(){return new i(this)}containsKey(t){return this.map.has(t)}containsValue(t){let e=this.map.values();for(const r of e)if(r===t)return!0;return!1}finalize(){this.map.clear(),this.map=null}entries(){let t=this.map.keys(),e=[];for(const[r,i]of t)e[r]={key:i,value:this.map.get(i)};return e}entrySet(){return new Set(this.entries())}get(t){return null===t?null:this.map.get(t)}isEmpty(){return 0===this.map.size}keys(){return this.map.keys()}keysSet(){return new Set(this.keys())}put(t,e){if(null===t)return null;let r=this.map.get(t);return this.map.set(t,e),r}putAll(t){if(null!==t)if(t instanceof i){let e=t.keys(),r=e.length;for(;r--;){let i=e[r];this.put(i,t.get(i))}}else if(t instanceof Map){let e=t.keys();for(const r of e)this.put(r,t.get(r))}else if(Array.isArray(t))t.forEach((t,e)=>{this.put(e,t)});else for(let e in t)t.hasOwnProperty(e)&&this.put(e,t[e])}remove(t){if(null===t)return;let e=this.map.get(t);return null!==e&&this.map.delete(t),e}size(){return this.map.size}toMap(){return new Map(this.map)}toObject(){let t={},e=this.map.keys();for(const r of e)t[r]=this.map.get(r);return t}toString(){let t="",e=this.keys(),r=this.values(),i=e.length;for(let n=0;n<i;n++)t+=e[n]+"="+r[n],n<i-1&&(t+=",");return t}values(){return this.map.values()}}},function(t,e,r){"use strict";r.r(e),r.d(e,"AbstractQueue",function(){return i}),r.d(e,"DEFAULT_QUEUE_CAPACITY",function(){return n}),r.d(e,"Queue",function(){return s});class i{constructor(){}add(t){return null}addAll(t){return!1}clear(){}contains(t){return!1}containsAll(t){return!1}element(){return null}isEmpty(){return!0}offer(t){return!1}peek(){return null}poll(){return null}remove(){return null}size(){return 0}}const n=100;class s extends i{constructor(t=n){super(),this.head=0,this.tail=0,this.mask=0,this.tailCache=0,this.headCache=0,this.capacity=s.findNextPositivePowerOfTwo(t),this.mask=this.capacity-1,this.buffer=new Array(this.capacity)}add(t){if(this.offer(t))return!0;throw new RangeError("IllegalStateException Queue is full")}addAll(t){if(null!==t){for(const e of t)this.add(e);return!0}throw new ReferenceError("NullPointerException Null is not a valid collection")}clear(){let t=null;do{t=this.poll()}while(null!==t)}contains(t){if(null===t)throw new ReferenceError("NullPointerException Null is not a valid element");let e=null;for(let r=this.head,i=this.tail;r<i;r++)if((e=this.buffer[r&this.mask])===t)return!0;return!1}containsAll(t){if(null!==t){for(const e of t)if(!this.contains(e))return!1;return!0}throw new ReferenceError("NullPointerException Null is not a valid collection")}element(){let t=this.peek();if(null===t)throw new RangeError("NoSuchElementException Queue is empty");return t}static findNextPositivePowerOfTwo(t){return 1<<32-s.numberOfLeadingZeros(t-1)}isEmpty(){return this.tail===this.head}static numberOfLeadingZeros(t){if(0===t)return 32;let e=1;return t>>>16==0&&(e+=16,t<<=16),t>>>24==0&&(e+=8,t<<=8),t>>>28==0&&(e+=4,t<<=4),t>>>30==0&&(e+=2,t<<=2),e-=t>>>31}offer(t){if(null===t)throw new ReferenceError("NullPointerException Null is not a valid element");let e=this.tail,r=e-this.capacity;return!(this.headCache<=r&&(this.headCache=this.head,this.headCache<=r))&&(this.buffer[e&this.mask]=t,this.tail=e+1,!0)}peek(){return this.buffer[this.head&this.mask]}poll(){let t=this.head;if(t>=this.tailCache&&(this.tailCache=this.tail,t>=this.tailCache))return null;let e=t&this.mask,r=this.buffer[e];return this.buffer[e]=null,this.head=t+1,r}remove(){let t=this.poll();if(null===t)throw new RangeError("NoSuchElementException Queue is empty");return t}size(){return this.tail-this.head}}},function(t,e,r){"use strict";r.r(e),r.d(e,"TraversalAction",function(){return s}),r.d(e,"TreeNodeIterator",function(){return l}),r.d(e,"TreeNode",function(){return h}),r.d(e,"MultiTreeNode",function(){return u}),r.d(e,"ArrayMultiTreeNode",function(){return c}),r.d(e,"LinkedMultiTreeNode",function(){return m});var i=r(0),n=r(1);class s{constructor({isCompleted:t=null,perform:e=null}={}){null!==t&&(this.isCompleted=t),null!==e&&(this.perform=e)}isCompleted(){return null}perform(t){}}class l extends n.Iterator{constructor({list:t,leftMostNode:e=null,rightSiblingNode:r=null}){super(t),this.currentNode=null,this.nextNode=t,this.nextNodeAvailable=!0,this.expectedSize=t.size(),null!==e&&(this.leftMostNode=e),null!==r&&(this.rightSiblingNode=r)}checkAndGetLeftMostNode(){if(this.list.isLeaf())throw new ReferenceError("TreeNodeException Leftmost node can't be obtained. Current tree node is a leaf");return this.leftMostNode()}checkAndGetRightSiblingNode(){if(this.list.isLeaf())throw new ReferenceError("Right sibling node can't be obtained. Current tree node is root");return this.rightSiblingNode()}hasNext(){return this.nextNodeAvailable}isIterationStarted(){return null!==this.currentNode}next(){if(!this.hasNext())throw new RangeError("NoSuchElementException");if(this.currentNode=this.nextNode,this.nextNode.isLeaf())if(this.nextNode.isRoot())this.nextNodeAvailable=!1;else for(;;){let t=this.nextNode;if(this.nextNode=this.nextNode.parent(),t===this.list){this.nextNodeAvailable=!1;break}let e=t.iterator().checkAndGetRightSiblingNode();if(null!==e){this.nextNode=e;break}}else this.nextNode=this.nextNode.iterator().checkAndGetLeftMostNode()}remove(){let t="Failed to remove the tree node. ";if(!this.isIterationStarted())throw new ReferenceError("IllegalStateException "+t+"The iteration has not been performed yet");if(this.currentNode.isRoot()){let e=t+`The tree node ${this.currentNode}s is root`;throw new ReferenceError("TreeNodeException "+e)}if(this.currentNode===this.list)throw new ReferenceError("TreeNodeException "+t+"The starting node can't be removed");let e=this.currentNode;for(;;){if(e.isRoot()){this.nextNodeAvailable=!1;break}let t=e.iterator().checkAndGetRightSiblingNode();if(null!==t){this.nextNode=t;break}e=e.parent}let r=this.currentNode.parent();r.dropSubtree(this.currentNode),this.currentNode=r,this.expectedSize=this.list.size()}}let o=0;class h{constructor({data:t=null,add:e=null,clear:r=null,dropSubtree:i=null,iterator:n=null,subtrees:s=null}={}){this.parent=null,this.data=t,this.id=o,o++,null!==e&&(this.add=e),null!==r&&(this.clear=r),null!==i&&(this.dropSubtree=i),null!==n&&(this.iterator=n),null!==s&&(this.subtrees=s),this.myParent=null}add(t){}clear(){}commonAncestor(t=null){let e="Unable to find the common ancestor between tree nodes. ";if(null===t){throw new ReferenceError("TreeNodeException "+(e+"The specified tree node is null"))}if(!this.root().contains(t)){let r=e+`The specified tree node ${t}s was not found in the current tree node ${this}s`;throw new ReferenceError("TreeNodeException "+r)}if(this.isRoot()||t.isRoot()){let r=e+`The tree node ${this.isRoot()?this:t}s is root`;throw new ReferenceError("TreeNodeException "+r)}return this===t||t.isSiblingOf(this)?this.parent():this.level()>t.level()?t.parent():this.parent()}contains(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;let e=this.subtrees();for(const r of e)if(r===t||r.contains(t))return!0;return!1}containsAll(t=null){if(this.isLeaf()||h.areAllNulls(t))return!1;for(const e of t)if(!this.contains(e))return!1;return!0}dropSubtree(t){return!1}equals(t){return this===t||null!==t&&t instanceof h&&this.id===t.id}find(t=null){if(this.isLeaf()){let e=this.data();return(null===e?null===e:e===t)?this:null}const e=[];return this.traversePreOrder(new s({isCompleted:()=>null!==e[0],perform:r=>{let i=r.getData();(null===i?null===t:t===i)&&(e[0]=r)}})),e[0]}findAll(t=null){if(this.isLeaf()){let e=this.data();return null===e?null===t:t===e?[this]:[]}const e=[];return this.traversePreOrder(new s({isCompleted:()=>!1,perform:r=>{let i=r.getData();(null===i?null===t:t===i)&&e.push(r)}})),e}data(){return this.data}hasSubtree(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;let e=this.subtrees();for(const r of e)if(r===t)return!0;return!1}hashCode(){return this.id^this.id>>>32}height(){if(this.isLeaf())return 0;let t=0,e=this.subtrees();for(const r of e)t=Math.max(t,r.height());return t+1}isAncestorOf(t=null){if(null===t||this.isLeaf()||t.isRoot()||this===t)return!1;let e=t;do{if(this===(e=e.parent()))return!0}while(!e.isRoot());return!1}static isAnyNotNull(t=null){if(null===t||0===t.length)return!1;for(const e of t)if(null!==e||void 0!==e)return!0;return!1}isDescendantOf(t=null){if(null===t||this.isRoot()||t.isLeaf()||this===t)return!1;let e=this;do{if(t===(e=e.parent()))return!0}while(!e.isRoot());return!1}isLeaf(){return 0===this.subtrees()}isRoot(){return null===this.parent}isSiblingOf(t=null){return null!==t&&!this.isRoot()&&!t.isRoot()&&this.parent()===t.parent()}iterator(){return null}level(){if(this.isRoot())return 0;let t=this;do{t=t.parent(),0}while(!t.isRoot());return level}static linkParent(t,e){null!==t&&(t.parent=e)}parent(){return this.myParent}path(t=null){if(null===t||this.isLeaf()||this===t)return[this];let e="Unable to build the path between tree nodes. ";if(t.isRoot()){let r=e+`Current node ${t}s is root`;throw new ReferenceError("TreeNodeException "+r)}let r=[],i=t;r.push(i);do{if(i=i.parent(),r.unshift(i),this===i)return r}while(!i.isRoot());let n=e+`The specified tree node ${t}s is not the descendant of tree node ${this}s`;throw new ReferenceError("TreeNodeException "+n)}static populateAction(t){return new s({perform:e=>{t.push(e)},isCompleted:()=>!1})}postOrdered(){if(this.isLeaf())return[this];let t=[],e=h.populateAction(t);return this.traversePostOrder(e),t}preOrdered(){if(this.isLeaf())return[this];let t=[],e=h.populateAction(t);return this.traversePreOrder(e),t}remove(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;if(this.dropSubtree(t))return!0;let e=this.subtrees();for(const r of e)if(r.remove(t))return!0;return!1}removeAll(t=null){if(this.isLeaf()||h.areAllNulls(t))return!1;let e=!1;for(const r of t){let t=this.remove(r);!e&&t&&(e=!0)}return e}root(){if(this.isRoot())return this;let t=this;do{t=t.parent()}while(!t.isRoot());return t}setData(t){this.data=t}size(){if(this.isLeaf())return 1;const t=[0];let e=new s({perform:e=>{t[0]++},isCompleted:()=>!1});return this.traversePreOrder(e),t[0]}subtrees(){return null}toString(){let t="\n",e=this.level(),r=new s({perform:r=>{let i=r.level()-e;for(let e=0;e<i;e++)t+="|  ";t+="+- "+r.data()+"\n"},isCompleted:()=>!1});return this.traversePreOrder(r),t}traversePostOrder(t){if(!t.isCompleted()){if(!this.isLeaf()){let e=this.subtrees();for(const r of e)r.traversePostOrder(t)}t.perform(this)}}traversePreOrder(t){if(!t.isCompleted()&&(t.perform(this),!this.isLeaf())){let e=this.subtrees();for(const r of e)r.traversePreOrder(t)}}static unlinkParent(t){t.parent=null}}class u extends h{constructor({data:t=null}={}){super({data:t})}addSubtrees(t){if(h.areAllNulls(t))return!1;for(const e of t)if(h.linkParent(e,this),!this.add(e))return!1;return!0}dropSubtrees(t){if(this.isLeaf()||h.areAllNulls(t))return!1;let e=!1;for(const r of t){let t=this.dropSubtree(r);!e&&t&&(e=!0)}return e}hasSubtrees(t){if(this.isLeaf()||h.areAllNulls(t))return!1;for(const e of t)if(!this.hasSubtree(e))return!1;return!0}siblings(){if(this.isRoot()){let t=`"Unable to find the siblings. The tree node ${this.root()}s is root`;throw new ReferenceError("TreeNodeException "+t)}let t=this.parent.subtrees();if(1===t.length)return[];let e=[];for(const r of t)r!==this&&e.push(r);return e}}const a=10,f=Number.MAX_VALUE-8;class c extends u{constructor({data:t=null,branchingFactor:e=a}={}){if(super({data:t}),e<0)throw new RangeError("IllegalArgumentException Branching factor can not be negative");this.subtreesSize=0,this.branchingFactor=0,this.branchingFactor=e,this.mySubtrees=new Array(e)}add(t){return null!==t&&(h.linkParent(t,this),this.ensureSubtreesCapacity(this.subtreesSize+1),this.mySubtrees[this.subtreesSize++]=t,!0)}addSubtrees(t){if(h.areAllNulls(t))return!1;for(const e of t)h.linkParent(e,this);let e=t,r=e.length;return this.ensureSubtreesCapacity(this.subtreesSize+r),i.arraycopy(e,0,this.mySubtrees,this.subtreesSize,r),this.subtreesSize+=r,0!=r}clear(){if(!this.isLeaf()){for(let t=0;t<this.subtreesSize;t++){let e=this.mySubtrees[t];h.unlinkParent(e)}this.mySubtrees=new Array(this.branchingFactor),this.subtreesSize=0}}contains(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;for(let e=0;e<this.subtreesSize;e++){let r=this.mySubtrees[e];if(r.equals(t))return!0;if(r.contains(t))return!0}return!1}dropSubtree(t){if(null===t||this.isLeaf()||t.isRoot())return!1;let e=this.indexOf(t);if(e<0)return!1;let r=this.subtreesSize-e-1;return r>0&&i.arraycopy(this.mySubtrees,e+1,this.mySubtrees,e,r),this.mySubtrees[--this.subtreesSize]=null,h.unlinkParent(t),!0}ensureSubtreesCapacity(t){t>this.mySubtrees.length&&this.increaseSubtreesCapacity(t)}hasSubtree(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;for(let e=0;e<this.subtreesSize;e++){let r=this.mySubtrees[e];if(t.equals(r))return!0}return!1}height(){if(this.isLeaf())return 0;let t=0;for(let e=0;e<this.subtreesSize;e++){let r=this.mySubtrees[e];t=Math.max(t,r.height())}return t+1}increaseSubtreesCapacity(t){let e=this.mySubtrees.length,r=e+(e>>1);if(r<t&&(r=t),r>f){if(t<0)throw new RangeError("OutOfMemoryError");r=t>f?Number.MAX_VALUE:f}this.mySubtrees=i.copyOf(this.mySubtrees,r)}indexOf(t){for(let e=0;e<this.subtreesSize;e++){if(this.mySubtrees[e].equals(t))return e}return-1}isLeaf(){return 0===this.subtreesSize}iterator(){return new l({list:this,leftMostNode:()=>this.mySubtrees[0],rightSiblingNode:()=>{let t=this.parent,e=t.indexOf(this)+1;return e<=t.subtreesSize?t.mySubtrees[e]:null}})}remove(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;if(this.dropSubtree(t))return!0;for(let e=0;e<this.subtreesSize;e++){if(this.mySubtrees[e].remove(t))return!0}return!1}siblings(){if(this.isRoot()){let t=`Unable to find the siblings. The tree node ${this.root()}s is root`;throw new RangeError("TreeNodeException "+t)}let t=this.parent,e=t.subtreesSize;if(1==e)return[];let r=t.subtrees,i=new Array(e-1);for(let t=0;t<e;t++){let e=r[t];e.equals(this)||i.push(e)}return i}subtrees(){if(this.isLeaf())return[];let t=[];for(let e=0;e<this.subtreesSize;e++){let r=this.mySubtrees[e];t.push(r)}return t}traversePostOrder(t){if(!t.isCompleted()){if(!this.isLeaf())for(let e=0;e<this.subtreesSize;e++){this.mySubtrees[e].traversePostOrder(t)}t.perform(this)}}traversePreOrder(t){if(!t.isCompleted()&&(t.perform(this),!this.isLeaf()))for(let e=0;e<this.subtreesSize;e++){this.mySubtrees[e].traversePreOrder(t)}}}class m extends u{constructor({data:t=null,branchingFactor:e=a}={}){super({data:t,branchingFactor:e}),this.leftMostNode=null,this.lastSubtreeNode=null,this.rightSiblingNode=null}add(t=null){return null!==t&&(h.linkParent(t,this),this.isLeaf()?(this.leftMostNode=t,this.lastSubtreeNode=this.leftMostNode):(this.lastSubtreeNode.rightSiblingNode=t,this.lastSubtreeNode=this.lastSubtreeNode.rightSiblingNode),!0)}clear(){if(!this.isLeaf()){let t=this.leftMostNode;for(;null!==t;){h.unlinkParent(t);let e=t.rightSiblingNode;t.rightSiblingNode=null,t.lastSubtreeNode=null,t=e}this.leftMostNode=null}}contains(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;let e=this.leftMostNode;for(;null!==e;){if(e.equals(t))return!0;if(e.contains(t))return!0;e=e.rightSiblingNode}return!1}dropSubtree(t){if(null===t||this.isLeaf()||t.isRoot())return!1;if(this.leftMostNode.equals(t))return this.leftMostNode=this.leftMostNode.rightSiblingNode,h.unlinkParent(t),t.rightSiblingNode=null,!0;{let e=this.leftMostNode;for(;null!==e.rightSiblingNode;){if(e.rightSiblingNode.equals(t))return h.unlinkParent(t),e.rightSiblingNode=e.rightSiblingNode.rightSiblingNode,t.rightSiblingNode=null,!0;e=e.rightSiblingNode}}return!1}hasSubtree(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;let e=this.leftMostNode;for(;null!==e;){if(e.equals(t))return!0;e=e.rightSiblingNode}return!1}height(){if(this.isLeaf())return 0;let t=0,e=this.leftMostNode;for(;null!==e;)t=Math.max(t,e.height()),e=e.rightSiblingNode;return t+1}isLeaf(){return null===this.leftMostNode}iterator(){return new l({list:this,leftMostNode:()=>this.leftMostNode,rightSiblingNode:()=>this.rightSiblingNode})}remove(t=null){if(null===t||this.isLeaf()||t.isRoot())return!1;if(this.dropSubtree(t))return!0;let e=this.leftMostNode;for(;null!==e;){if(e.remove(t))return!0;e=e.rightSiblingNode}return!1}siblings(){if(this.isRoot()){let t=`Unable to find the siblings. The tree node ${this.root()}s is root`;throw new ReferenceError("TreeNodeException "+t)}let t=this.parent().leftMostNode;if(null===t.rightSiblingNode)return[];let e=[],r=t;for(;null!==r;)r.equals(this)||e.push(r),r=r.rightSiblingNode;return e}subtrees(){if(this.isLeaf())return[];let t=[];t.push(this.leftMostNode);let e=this.leftMostNode.rightSiblingNode;for(;null!==e;)t.push(e),e=e.rightSiblingNode;return t}traversePostOrder(t){if(!t.isCompleted()){if(!this.isLeaf()){let e=this.leftMostNode;for(;null!==e;)e.traversePostOrder(t),e=e.rightSiblingNode}t.perform(this)}}traversePreOrder(t){if(!t.isCompleted()&&(t.perform(this),!this.isLeaf())){let e=this.leftMostNode;for(;null!==e;)e.traversePreOrder(t),e=e.rightSiblingNode}}}},function(e,r,i){"use strict";i.r(r),i.d(r,"HashtableEntry",function(){return f}),i.d(r,"Enumerator",function(){return c}),i.d(r,"Hashtable",function(){return y}),i.d(r,"HashMapEntry",function(){return g}),i.d(r,"HashMap",function(){return A});var n=i(0),s=i(1),l=i(2);const o=0,u=1,a=2;class f{constructor({h:t=0,key:e=null,value:r=null,next:i=null}={}){this.h=t,this.key=e,this.value=r,this.next=i}equals(t){if(!(t instanceof f))return!1;let e=t;return this.key===e.getKey()&&this.value===e.getValue()}getKey(){return this.key}getValue(){return this.value}hashCode(){return y.hash(this.key)^y.hash(this.value)}setValue(t){if(null===t)throw new ReferenceError("NullPointerException");let e=this.value;return this.value=t,e}}class c{constructor(t,e,r){this.mHashTable=t,this.mIndex=this.mHashTable.table.length,this.mIterator=r,this.mLastReturned=null,this.mEntry=null,this.mType=e}hasMoreElements(){let t=this.mEntry,e=this.mIndex,r=this.mHashTable.table;for(;null===t&&e>0;)t=r[--e];return this.mEntry=t,this.mIndex=e,null!==t}hasNext(){return this.hasMoreElements()}next(){return this.nextElement()}nextElement(){let e=this.mEntry,r=this.mIndex,i=this.mHashTable.table;for(;null===i&&r>0;)i=t[--r];if(this.mEntry=i,this.mIndex=r,null!==e)return e=this.mLastReturned=this.mEntry,this.mEntry=e.next,this.mType===o?e.key:this.mType===u?e.value:e;throw new RangeError("NoSuchElementException Hashtable Enumerator")}remove(){if(!this.mIterator)throw new Error("UnsupportedOperationException");if(null===this.mLastReturned)throw new Error("IllegalStateException Hashtable Enumerator");let t=this.mHashTable.table,e=(2147483647&this.mLastReturned.h)%t.length;for(let r=t[e],i=null;null!==r;i=r,r=r.next)if(r===this.mLastReturned)return this.mHashTable.modCount++,this.mHashTable.expectedModCount++,null===i?t[e]=r.next:i.next=r.next,this.mHashTable.count--,void(this.mLastReturned=null);throw new Error("ConcurrentModificationException")}}const d=Number.MAX_VALUE-8,p=.75;class y{constructor({initialCapacity:t=11,loadFactor:e=p,map:r=null}={}){if(null!==r)t=2*r.size(),this.loadFactor=e;else{if(t<0)throw new RangeError("IllegalArgumentException Illegal Capacity: "+t);if(e<=0)throw new RangeError("IllegalArgumentException Illegal Load: "+e)}this.table=new Array(t),this.threshold=t<=d+1?t:d+1,null!==r&&this.putAll(r)}clear(){let t=this.table;for(let e=t.length;--e>=0;)t[e]=null;this.count=0}contains(t){if(null===t)throw new ReferenceError("NullPointerException");let e=this.table;for(let r=e.length;r-- >0;)for(let i=e[r];null!==i;i=i.next)if(i.value===t)return!0;return!1}containsKey(t){let e=this.table,r=y.hash(t);for(let i=e[(2147483647&r)%e.length];null!==i;i=i.next)if(i.h===r&&i.key===t)return!0;return!1}containsValue(t){return this.contains(t)}elements(){return this.getEnumeration(u)}entrySet(){return{iterator:()=>this.getIterator(a)}}get(t){let e=this.table,r=y.hash(t);for(let i=e[(2147483647&r)%e.length];null!==i;i=i.next)if(i.h===r&&i.key===t)return i.value;return null}getEnumeration(t){return 0===this.count?new Enumeration(this.table):new c(this,t,!1)}getIterator(t){return 0===this.count?new s.Iterator(this.table):new c(this,t,!0)}static hash(t){return n.hashCode(t)}isEmpty(){return 0===this.count}keys(){return this.getEnumeration(o)}keySet(){return{clear:()=>{this.clear()},contains:t=>this.containsKey(t),iterator:()=>this.getIterator(o),remove:t=>null!==this.remove(t),size:()=>this.count}}put(t,e){if(null===e)throw new ReferenceError("NullPointerException");let r=null,i=this.table,n=y.hash(t),s=(2147483647&n)%i.length;for(let l=i[s];null!==l;l=l.next)if(l.h===n&&l.key===t)return r=l.value,l.value=e,r;this.count>=this.threshold&&(this.rehash(),i=this.table,s=(2147483647&(n=y.hash(t)))%i.length);let l=i[s];return i[s]=new f({h:n,key:t,value:e,next:l}),this.count++,null}putAll(t){t instanceof l.AbstractMap&&(t=t.map);for(let e in t)t.hasOwnProperty(e)&&this.put(e,t[e])}rehash(){let t=this.table.length,e=this.table,r=1+(t<<1);if(r-d>0){if(t===d)return;r=d}let i=new Array(r);this.threshold=Math.min(r*this.loadFactor,d+1),this.table=i;let n=null,s=0;for(let l=t;l-- >0;)for(let t=e[l];null!==t;)n=t,t=t.next,s=(2147483647&n.h)%r,n.next=i[s],i[s]=n}remove(t){let e=this.table,r=y.hash(t),i=(2147483647&h)%e.length,n=null;for(let s=e[i],l=null;null!==s;l=s,s=s.next)if(s.h===r&&s.key===t)return null!==l?l.next=s.next:e[i]=s.next,this.count--,n=s.value,s.value=null,n;return null}size(){return this.count}values(){return{clear:()=>{this.clear()},contains:t=>this.containsValue(t),iterator:()=>this.getIterator(u),size:()=>this.count}}}class g extends f{constructor({h:t=0,key:e=null,value:r=null,next:i=null}={}){super({h:t,key:e,value:r,next:i})}equals(t){if(!(t instanceof g))return!1;let e=t,r=this.getKey(),i=e.getKey();if(r===i||null!==r&&r===i){let t=this.getValue(),r=e.getValue();return t===r||null!==t&&t===r}return!1}recordAccess(t){}recordRemoval(t){}setValue(t){let e=this.value;return this.value=t,e}}class b extends s.Iterator{constructor(t,e=a){if(super(t),this.type=e,this.next=null,this.current=null,this.list.count>0){let t=this.list.map;for(;this.cursor<t.length&&!this.next;)this.next=t[this.cursor++]}}hasNext(){return null!==this.next}next(){switch(this.type){case o:return this.nextEntry().getKey();case u:return this.nextEntry().getValue();case a:return this.nextEntry()}}nextEntry(){let t=this.next;if(null===t)throw new RangeError("NoSuchElementException");if(null===(this.next=t.next)){let t=this.list.map;for(;this.cursor<t.length&&!this.next;)this.next=t[this.cursor++]}return this.current=t,t}remove(){if(null===this.current)throw new RangeError("IllegalStateException");let t=this.current.key;this.current=null,this.list.removeEntryForKey(t)}}const x=4,S=1<<30,E=[],w=(t,e)=>t&e-1,v=t=>{let e=0;return e=t>=S?S:0!=(e=(t=>(t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,(t|=t>>16)-(t>>>1)))(t))?(t=>(t=(t=(858993459&(t-=t>>>1&1431655765))+(t>>>2&858993459))+(t>>>4)&252645135,t+=t>>>8,63&(t+=t>>>16)))(t)>1?e<<1:e:1};class A extends l.AbstractMap{constructor({initialCapacity:t=x,loadFactor:e=p,values:r=null}={}){super();let i=null!==r&&r instanceof l.AbstractMap;if(i&&(t=Math.max(m.size()/p+1,x)),t<0)throw new RangeError("IllegalArgumentException Illegal initial capacity: "+t);if(t>S?t=S:t<x&&(t=x),e<=0||isNaN(e))throw new RangeError("IllegalArgumentException Illegal load factor: "+e);this.count=0,this.map=E,this.threshold=t,this.init(),i&&(this.inflateTable(this.threshold),this.putAllForCreate(r))}addEntry(t,e,r,i){this.count>=this.threshold&&this.map[i]&&(this.resize(2*this.map.length),t=null===e?0:n.hashCode(e),i=w(t,this.map.length)),this.createEntry(t,e,r,i)}clear(){n.fill(this.table,null),this.count=0}containsKey(t){return null!==this.getEntry(t)}containsNullValue(){let t=this.table;for(let e=0;e<t.length;e++)for(let r=t[e];null!==r;r=r.next)if(null===r.value)return!0;return!1}containsValue(t){if(null===t)return this.containsNullValue();let e=this.map;for(let r=0;r<e.length;r++)for(let i=e[r];null!==i;i=i.next)if(t===i.value)return!0;return!1}createEntry(t,e,r,i){let n=this.map[i];this.map[i]=new g({h:t,key:e,value:r,next:n}),this.count++}get(t){if(null===t)return this.getForNullKey();let e=this.getEntry(t);return null===e?null:e.getValue()}getEntry(t){if(0===this.count)return null;let e=null===t?0:n.hashCode(t);for(let r=this.map[w(e,this.map.length)];null!==r;r=r.next){let i;if(r.h===e&&((i=r.key)===t||null!==t&&t===i))return r}return null}getForNullKey(){if(0===this.count)return null;for(let t=this.map[0];null!==t;t=t.next)if(null===t.key)return t.value;return null}inflateTable(t){let e=v(t),r=e*this.loadFactor;r>S+1&&(r=S+1);this.map=new Array(e)}init(){}isEmpty(){return 0===this.count}newEntryIterator(){return new b(this,a)}newKeyIterator(){return new b(this,o)}newValueIterator(){return new b(this,u)}put(t,e){if(this.map===E&&this.inflateTable(this.threshold),null===t)return this.putForNullKey(e);let r=null===t?0:n.hashCode(t),i=w(r,this.map.length),s=this.map[i];do{if(s){let i;if(s.h===r&&((i=s.key)===t||t===i)){let t=s.value;return s.value=e,s.recordAccess(this),t}s=s.next}}while(s);return this.addEntry(r,t,e,i),null}putAll(t){if(!(t instanceof l.AbstractMap))return;let e=t.size();if(0===e)return;if(this.map===E&&this.inflateTable(Math.max(e*this.loadFactor,this.threshold)),e>this.threshold){let t=e/this.loadFactor+1;t>S&&(t=S);let r=this.map.length;for(;r<t;)r<<=1;r>this.map.length&&this.resize(r)}let r=t.entries();for(const{key:t,value:e}of r)this.put(t,e)}putAllForCreate(t){let e=t.entries();for(const{key:t,value:r}of e)this.putForCreate(t,r)}putForCreate(t,e){let r=null===t?0:n.hashCode(t),i=w(r,this.map.length),s=this.map[i];do{if(s){let i;if(s.h===r&&((i=s.key)===t||null!==t&&t===i))return void(s.value=e);s=s.next}}while(s);this.createEntry(r,t,e,i)}putForNullKey(t){for(let e=this.map[0];null!==e;e=e.next)if(null===e.key){let r=e.value;return e.value=t,e.recordAccess(this),r}return this.addEntry(0,null,t,0),null}remove(t){let e=this.removeEntryForKey(t);return null===e?null:e.getValue()}removeEntryForKey(t){if(0===this.count)return null;let e=null===t?0:n.hashCode(t),r=w(e,this.map.length),i=this.map[r],s=i;for(;s;){let n,l=s.next;if(s.h===e&&((n=s.key)===t||null!==t&&t===n))return this.count--,i===s?this.map[r]=l:i.next=l,s.recordRemoval(this),s;i=s,s=l}return s}removeMapping(t){if(0===this.count||!(t instanceof f))return null;let e=t,r=e.getKey(),i=null===r?0:n.hashCode(r),s=w(i,this.map.length),l=this.map[s],o=l;for(;o;){let t=o.next;if(o.h===i&&o.equals(e))return this.count--,l===o?this.map[s]=t:l.next=t,o.recordRemoval(this),o;l=o,o=t}return o}resize(t){this.map.length===S&&(this.threshold=Number.MAX_VALUE);let e=new Array(t);this.transfer(e),this.map=e,this.threshold=Math.min(t*this.loadFactor,S+1)}size(){return this.count}transfer(t){let e=t.length,r=this.map.length;for(let i=0;i<r;i++){let r=this.map[i];for(;r;){let i=r.next,n=w(r.h,e);r.next=t[n],t[n]=r,r=i}}}}},function(t,e,r){"use strict";r.r(e),r.d(e,"LinkedNode",function(){return s}),r.d(e,"LinkedListIterator",function(){return l}),r.d(e,"LinkedList",function(){return o});var i=r(1),n=r(3);class s{constructor({item:t=null,next:e=null,prev:r=null}={}){this.item=t,this.next=e,this.prev=r}}class l extends i.Iterator{constructor(t=[],e=0){super(t),this.nextReturned=e===t.count?null:t.node(e),this.expectedModCount=0,this.cursor=e}add(t){this.checkForComodification(),this.lastReturned=null,null===this.nextReturned?this.list.linkLast(t):this.list.linkBefore(t,next),this.cursor++,this.expectedModCount++}checkForComodification(){if(this.list.modCount!==this.expectedModCount)throw new Error("ConcurrentModificationException")}hasNext(){return this.cursor<this.list.count}hasPrevious(){return this.cursor>0}next(){if(this.checkForComodification(),!this.hasNext())throw new RangeError("NoSuchElementException");return this.lastReturned=this.nextReturned,this.nextReturned=this.nextReturned.next,this.cursor++,this.lastReturned.item}nextIndex(){return this.cursor}previous(){if(this.checkForComodification(),!this.hasPrevious())throw new RangeError("NoSuchElementException");return this.lastReturned=this.nextReturned=null===this.nextReturned?this.last:this.nextReturned.prev,this.cursor--,this.lastReturned.item}previousIndex(){return this.cursor-1}remove(){if(this.checkForComodification(),null===this.lastReturned)throw new Error("IllegalStateException");let t=this.lastReturned.next;this.list.unlink(this.lastReturned),this.nextReturned===this.lastReturned?this.nextReturned=t:this.cursor--,this.lastReturned=null,this.expectedModCount++}set(t){if(null===this.lastReturned)throw new Error("IllegalStateException");this.checkForComodification(),this.lastReturned.item=t}}class o extends n.AbstractQueue{constructor(t=null){super(),this.count=0,this.modCount=0,this.first=null,this.last=null,null!==t&&Array.isArray(t)&&this.addAll(t)}add(t){return this.linkLast(t),!0}addAll(t){return this.addAllAt(this.count,t)}addAt(t,e){this.checkPositionIndex(t),t===this.count?this.linkLast(e):this.linkBefore(e,this.node(t))}addAllAt(t,e){this.checkPositionIndex(t);let r=e.length;if(0===r)return!1;let i=null,n=null;t===this.count?(n=null,i=this.last):i=(n=this.node(t)).prev;for(const t of e){let e=new s({prev:i,item:t,next:null});null===i?this.first=e:i.next=e,i=e}return null===n?this.last=i:(i.next=n,n.prev=i),this.count+=r,this.modCount++,!0}addFirst(t){this.linkFirst(t)}addLast(t){this.linkLast(t)}checkElementIndex(t){if(!this.isElementIndex(t))throw new RangeError(this.outOfBoundsMsg(t))}checkPositionIndex(t){if(!this.isPositionIndex(t))throw new RangeError(this.outOfBoundsMsg(t))}clear(){let t=null;for(let e=this.first;null!==e;)t=e.next,e.item=e.next=e.prev=null,e=t;this.first=this.last=null,this.count=0,this.modCount++}contains(t){return-1!==this.indexOf(t)}element(){return this.getFirst()}get(t){return this.checkElementIndex(t),this.node(t).item}getFirst(){let t=this.first;if(null===t)throw new RangeError("NoSuchElementException this list is empty");return t.item}getLast(){let t=this.last;if(null===t)throw new RangeError("NoSuchElementException this list is empty");return t.item}indexOf(t){let e=0;if(null===t)for(let t=this.first;null!==t;t=t.next){if(null!==t.item)return e;e++}else for(let r=this.first;null!==r;r=r.next){if(t===r.item)return e;e++}return-1}isElementIndex(t){return t>=0&&t<this.count}isPositionIndex(t){return t>=0&&t<=this.count}lastIndexOf(t){let e=this.count;if(null===t){for(let t=this.last;null!==t;t=t.prev)if(e--,null===t.item)return e}else for(let r=this.last;null!==r;r=r.prev)if(e--,t===r.item)return e;return-1}linkBefore(t,e){let r=e.prev,i=new s({prev:r,item:t,next:e});e.prev=i,null===r?this.first=i:r.next=i,this.count++,this.modCount++}linkLast(t){let e=this.last,r=new s({prev:e,item:t,next:null});this.last=r,null===e?this.first=r:e.next=r,this.count++,this.modCount++}linkFirst(t){let e=this.first,r=new s({prev:null,item:t,next:e});this.first=r,null===t?this.last=r:e.prev=r,this.count++,this.modCount++}listIterator(t){return this.checkPositionIndex(t),new l(this,t)}node(t){if(t<this.count>>1){let e=this.first;for(let r=0;r<t;r++)e=e.next;return e}{let e=this.last;for(let r=this.count-1;r>t;r--)e=e.prev;return e}}offer(t){return this.add(t)}offerFirst(t){return this.addFirst(t),!0}offerLast(t){return this.addLast(t),!0}outOfBoundsMsg(t){return"Index: "+t+", Size: "+this.count}peek(){let t=this.first;return null===t?null:t.item}peekFirst(){return this.peek()}peekLast(){let t=this.last;return null===t?null:t.item}poll(){let t=this.first;return null===t?null:this.unlinkFirst(t)}pollFirst(){return this.poll()}pollLast(){let t=this.last;return null===t?null:this.unlinkLast(t)}pop(){return this.removeFirst()}push(t){this.addFirst(t)}remove(t){if(null===t){for(let t=this.first;null!==t;t=t.next)if(null===t.item)return this.unlink(t),!0}else for(let e=this.first;null!==e;e=e.next)if(t===e.item)return this.unlink(e),!0;return!1}removeAt(t){return this.checkElementIndex(t),this.unlink(this.node(t))}removeFirst(){let t=this.first;if(null===t)throw new RangeError("NoSuchElementException this list is empty");return this.unlinkFirst(t)}removeFirstOccurrence(t){return this.remove(t)}removeLast(){let t=this.last;if(null===t)throw new RangeError("NoSuchElementException this list is empty");return this.unlinkLast(t)}removeLastOccurrence(t){if(null===t){for(let t=this.last;null!==t;t=t.prev)if(null===!t.item)return this.unlink(t),!0}else for(let e=this.last;null!==e;e=e.prev)if(t===e.item)return this.unlink(e),!0;return!1}set(t,e){this.checkElementIndex(t);let r=this.node(t),i=r.item;return r.item=e,i}size(){return this.count}unlink(t){let e=t.item,r=t.next,i=t.prev;return null===i?this.first=r:(i.next=r,t.prev=null),null===r?this.last=i:(r.prev=i,t.next=null),t.item=null,this.count--,this.modCount++,e}unlinkFirst(t){let e=t.item,r=t.next;return t.item=t.next=null,this.first=r,null===r?this.last=null:r.prev=null,this.count--,this.modCount++,e}unlinkLast(t){let e=t.item,r=t.prev;return t.item=t.prev=null,this.last=r,null===r?this.first=null:r.next=null,this.count--,this.modCount++,e}}},function(t,e,r){"use strict";r.r(e),r.d(e,"RingBuffer",function(){return n});var i=r(3);class n extends i.AbstractQueue{constructor(t=0){if(super(),t<=0)throw new RangeError("IllegalArgumentException RingBuffer capacity must be positive.");this.offset=this.unconsumedElements=0,this.buffer=new Array(t)}add(t){if(this.offer(t))return!0;throw new RangeError("IllegalStateException Queue is full")}addAll(t){if(null!==t){for(const e of t)this.add(e);return!0}throw new ReferenceError("NullPointerException Null is not a valid collection")}capacity(){return this.buffer.length}clear(){let t=null;do{t=this.poll()}while(null!==t)}contains(t){if(null===t)throw new ReferenceError("NullPointerException Null is not a valid element");return-1!==this.buffer.indexOf(t)}containsAll(t){if(null!==t){for(const e of t)if(!this.contains(e))return!1;return!0}throw new ReferenceError("NullPointerException Null is not a valid collection")}element(){let t=this.peek();if(null===t)throw new RangeError("NoSuchElementException Queue is empty");return t}isEmpty(){return 0===this.size()}offer(t){if(null===t)throw new ReferenceError("NullPointerException Null is not a valid element");return this.unconsumedElements!==this.buffer.length&&(this.buffer[this.offset]=t,this.offset=(this.offset+1)%this.buffer.length,++this.unconsumedElements,!0)}peek(){if(0===this.unconsumedElements)return null;let t=this.capacity();return this.buffer[(this.offset+(t-this.unconsumedElements))%t]}poll(){let t=this.peek();return--this.unconsumedElements,t}remove(){let t=this.poll();if(null===t)throw new RangeError("NoSuchElementException Queue is empty");return t}size(){return this.unconsumedElements}}},function(t,e,r){"use strict";r.r(e),r.d(e,"BSTNode",function(){return n}),r.d(e,"BST",function(){return s});var i=r(1);class n{constructor(t,e,r){this.key=t,this.val=e,this.size=r,this.left=null,this.right=null}}class s extends i.Comparator{constructor(){super(),this.root=null}ceiling(t){if(null===t)throw new ReferenceError("argument to ceiling() is null");if(this.isEmpty())throw new RangeError("called ceiling() with empty symbol table");let e=this.internalCeiling(this.root,t);return null===e?null:e.key}check(){let t=this.isBST();t||console.log("Not in symmetric order");let e=this.isSizeConsistent();e||console.log("Subtree counts not consistent");let r=this.isRankConsistent();return r||console.log("Ranks not consistent"),t&&e&&r}contains(t){if(null===t)throw new ReferenceError("argument to contains() is null");return null!==this.get(t)}deleteMax(){if(this.isEmpty())throw new RangeError("Symbol table underflow");this.root=this.internalDeleteMax(this.root),this.check()}deleteMin(){if(this.isEmpty())throw new RangeError("Symbol table underflow");this.root=this.internalDeleteMin(this.root),this.check()}floor(t){if(null===t)throw new ReferenceError("argument to floor() is null");if(this.isEmpty())throw new RangeError("called floor() with empty symbol table");let e=this.internalFloor(this.root,t);return null===e?null:e.key}get(t){return this.internalGet(this.root,t)}getKeys(t,e){if(null===t)throw new ReferenceError("first argument to keys() is null");if(null===e)throw new ReferenceError("second argument to keys() is null");let r=[];return this.internalKeys(this.root,r,t,e),r}height(){return this.internalHeight(this.root)}internalCeiling(t,e){if(null===t)return null;let r=this.compare(e,t.key);if(0===r)return t;if(r<0){let r=this.internalCeiling(t.left,e);return null!==r?r:t}return this.internalCeiling(t.right,e)}internalDeleteMax(t){return null===t.right?t.left:(t.right=this.internalDeleteMax(t.right),t.size=this.internalSize(t.left)+this.internalSize(t.right)+1,t)}internalDeleteMin(t){return null===t.left?t.right:(t.left=this.internalDeleteMin(t.left),t.size=this.internalSize(t.left)+this.internalSize(t.right)+1,t)}internalFloor(t,e){if(null===t)return null;let r=this.compare(e,t.key);if(0===r)return t;if(r<0)return this.internalFloor(t.left,e);let i=this.internalFloor(t.right,e);return null!==i?i:t}internalGet(t,e){if(null===t)return null;let r=this.compare(e,t.key);return r<0?this.internalGet(t.left,e):r>0?this.internalGet(t.right,e):t.val}internalHeight(t){return null===t?-1:1+Math.max(this.internalHeight(t.left),this.internalHeight(t.right))}internalIsBST(t,e,r){return null===t||!(null!==e&&this.compare(t.key,e)<=0)&&(!(null!==r&&this.compare(t.key,r)>=0)&&(this.internalIsBST(t.left,e,t.key)&&this.internalIsBST(t.right,t.key,r)))}internalKeys(t,e,r,i){if(null===t)return;let n=this.compare(r,t.key),s=this.compare(i,t.key);n<0&&this.internalKeys(t.left,e,r,i),n<=0&&s>=0&&e.push(t.key),s>0&&this.internalKeys(t.right,e,r,i)}internalMax(t){return null===t.right?t:this.internalMax(t.right)}internalMin(t){return null===t.left?t:this.internalMin(t.left)}internalPut(t,e,r){if(null===t)return new n(e,r,1);let i=this.compare(e,t.key);return i<0?t.left=this.internalPut(t.left,e,r):i>0&&(t.val=r),t.size=1+this.internalSize(t.left)+this.internalSize(t.right),t}internalRank(t,e){if(null===e)return 0;let r=this.compare(t,e.key);return r<0?this.internalRank(t,e.left):r>0?1+this.internalSize(e.left)+this.internalRank(t,e.right):this.internalSize(e.left)}internalRemove(t,e){if(null===t)return null;let r=this.compare(e,t.key);if(r<0)t.left=this.internalRemove(t.left,e);else if(r>0)t.right=this.internalRemove(t.right,e);else{if(null===t.right)return t.left;if(null===t.left)return t.right;let e=t;(t=this.internalMin(e.right)).right=this.internalDeleteMin(e.right),t.left=e.left}return t.size=this.internalSize(t.left)+this.internalSize(t.right)+1,t}internalSelect(t,e){if(null===t)return null;let r=this.internalSize(t.left);return r>e?this.internalSelect(t.left,e):r<e?this.internalSelect(t.right,e-r-1):t}internalSize(t){return null===t?0:t.size}internalIsSizeConsistent(t){return null===t||t.size===this.internalSize(t.left)+this.internalSize(t.right)+1&&(this.internalIsSizeConsistent(t.left)&&this.internalIsSizeConsistent(t.right))}isBST(){return this.internalIsBST(this.root,null,null)}isRankConsistent(){for(let t=0;t<this.size();t++)if(t!==this.rank(this.select(t)))return!1;let t=null,e=this.keys(),r=e.length;for(;r--;)if(t=e[r],0!==this.compare(t,this.select(this.rank(t))))return!1;return!0}isSizeConsistent(){return this.internalIsSizeConsistent(this.root)}isEmpty(){return 0===this.size()}keys(){return this.getKeys(this.min(),this.max())}levelOrder(){let t=null,e=[],r=[];for(r.push(this.root);r.length>0;)null!==(t=r.pop())&&(e.push(t.key),r.push(t.left),r.push(t.right));return e}max(){if(this.isEmpty())throw new RangeError("called max() with empty symbol table");return this.internalMax(this.root).key}min(){if(this.isEmpty())throw new RangeError("called min() with empty symbol table");return this.internalMin(this.root).key}put(t,e){if(null===t)throw new ReferenceError("first argument to put() is null");null===e&&this.remove(t),this.root=this.internalPut(this.root,t,e),this.check()}rank(t){if(null===t)throw new ReferenceError("argument to rank() is null");return this.internalRank(t,this.root)}remove(t){if(null===t)throw new ReferenceError("argument to delete() is null");this.root=this.internalRemove(this.root,t),this.check()}select(t){if(t<0||t>=this.size())throw new RangeError("k < 0 or k >= size");return this.internalSelect(this.root,t).key}size(){return this.internalSize(this.root)}sizeof(t,e){if(null===t)throw new ReferenceError("first argument to size() is null");if(null===e)throw new ReferenceError("second argument to size() is null");return this.compare(t,e)>0?0:this.contains(e)?this.rank(e)-this.rank(t)+1:this.rank(e)-this.rank(t)}}},function(t,e,r){"use strict";r.r(e),r.d(e,"ArrayMap",function(){return d}),r.d(e,"SparseArray",function(){return y});var n=r(0),s=r(2);let l=0,o=null,h=0,u=null;const a=(t,e,r)=>{if(t.length===2*f){if(l<c){e[0]=o,e[1]=t;for(let t=(r<<1)-1;t>=2;t--)e[t]=null;o=e,l++,console.log("Storing 2x cache "+e+" now have "+l+" entries")}}else if(t.length===f&&h<c){e[0]=u,e[1]=t;for(let t=(r<<1)-1;t>=2;t--)e[t]=null;u=e,h++,console.log("Storing 1x cache "+e+" now have "+h+" entries")}},f=4,c=10,m=[];class d{constructor({capacity:t=0,immutable:e=!1,map:r=null}={}){if(null!==r)if(this.mHashes=[],this.mArray=[],this.mSize=0,r instanceof d||r instanceof s.AbstractMap){let t=r.keys(),e=t.length;for(;e--;)this.put(t[e],r.get(t[e]))}else for(let t in r)r.hasOwnProperty(t)&&this.put(t,r[t]);else this.mArray=[],e?(this.mHashes=m,this.mSize=0):(this.mHashes=[],t<=0?this.mSize=0:(this.allocArrays(t),this.mSize=0))}allocArrays(t){if(this.mHashes===m)throw new TypeError("UnsupportedOperationException ArrayMap is immutable");if(t===2*f){if(null!==o){let t=o;return this.mArray=t,o=t[0],this.mHashes=t[1],t[0]=t[1]=null,l--,void console.log("Retrieving 2x cache "+this.mHashes+" now have "+l+" entries")}}else if(t===f&&null!==u){let t=u;return this.mArray=t,u=t[0],this.mHashes=t[1],t[0]=t[1]=null,h--,void console.log("Retrieving 1x cache "+this.mHashes+" now have "+h+" entries")}this.mHashes=new Array(t),this.mArray=new Array(t<<1)}append(t,e){let r=this.mSize,i=null===t?0:n.hashCode(t);if(r>=this.mHashes.length)throw new RangeError("IllegalStateException Array is full");if(r>0&&this.mHashes[r-1]>i){let n=new Error("here");return console.error("New hash "+i+" is before end of array hash "+this.mHashes[r-1]+" at index "+r+" key "+t,n),void this.put(t,e)}this.mSize=r+1,this.mHashes[r]=i,r<<=1,this.mArray[r]=t,this.mArray[r+1]=e}clear(){this.mSize>0&&(a(this.mHashes,this.mArray,this.mSize),this.mHashes=[],this.mArray=[],this.mSize=0)}clone(){return new d({map:this})}containsKey(t){return this.indexOfKey(t)>=0}containsValue(t){return this.indexOfValue(t)>=0}ensureCapacity(t){if(this.mHashes.length<t){let e=this.mHashes,r=this.mArray;this.allocArrays(t),this.mSize>0&&(n.arraycopy(e,0,this.mHashes,0,this.mSize),n.arraycopy(r,0,this.mArray,0,this.mSize<<1)),a(e,r,this.mSize)}}entries(){let t=this.size(),e=[];for(;t--;)e[t]=this.keyAt(t);return e}equals(t){if(this===t)return!0;if(!(t instanceof d))return!1;let e=t;if(this.size()!==e.size())return!1;let r=null,i=null,n=null;for(let t=0;t<this.mSize;t++)if(r=this.keyAt(t),i=this.valueAt(t),n=e.get(r),null===i){if(null!==n||!e.containsKey(r))return!1;if(i!==n)return!1}return!0}erase(){if(this.mSize>0){let t=this.mSize<<1,e=this.mArray;for(let r=0;r<t;r++)e[r]=null;this.mSize=0}}get(t){let e=this.indexOfKey(t);return e>=0?this.mArray[1+(e<<1)]:null}hashCode(){let t=this.mHashes,e=this.mArray,r=0,i=null;for(let s=0,l=1,o=this.mSize;s<o;s++,l+=2)i=e[l],r+=t[s]^(null===i?0:n.hashCode(i));return r}indexOf(t,e){let r=this.mSize;if(0===r)return-1;let i=n.binarySearch(this.mHashes,r,e);if(i<0)return i;if(t===this.mArray[i<<1])return i;let s=0;for(s=i+1;s<r&&this.mHashes[s]===e;s++)if(t===this.mArray[s<<1])return s;for(let r=i-1;r>=0&&this.mHashes[r]===e;r--)if(t===this.mArray[r<<1])return r;return~s}indexOfKey(t){return null===t?this.indexOfNull():this.indexOf(t,n.hashCode(t))}indexOfNull(){let t=this.mSize;if(0===t)return-1;let e=n.binarySearch(this.mHashes,t,0);if(e<0)return e;if(null===this.mArray[e<<1])return e;let r=0;for(r=e+1;r<t&&0===this.mHashes[r];r++)if(null===this.mArray[r<<1])return r;for(let t=e-1;t>=0&&0===this.mHashes[t];t--)if(null===this.mArray[t<<1])return t;return~r}indexOfValue(t){let e=2*this.mSize,r=this.mArray;if(null===t){for(let t=1;t<e;t+=2)if(null===r[t])return t>>1}else for(let i=1;i<e;i+=2)if(t===r[i])return i>>1;return-1}isEmpty(){return this.mSize<=0}keyAt(t){return this.mArray[t<<1]}put(t,e){let r=0,i=0;if(null===t?i=this.indexOfNull():(r=n.hashCode(t),i=this.indexOf(t,r)),i>=0){i=1+(i<<1);let t=this.mArray[i];return this.mArray[i]=e,t}if(i=~i,this.mSize>=this.mHashes.length){let t=this.mSize>=2*f?this.mSize+(this.mSize>>1):this.mSize>=f?2*f:f;console.log("put: grow from "+this.mHashes.length+" to "+t);let e=this.mHashes,r=this.mArray;this.allocArrays(t),this.mHashes.length>0&&(console.log("put: copy 0-"+this.mSize+" to 0"),n.arraycopy(e,0,this.mHashes,0,e.length),n.arraycopy(r,0,this.mArray,0,r.length)),a(e,r,this.mSize)}return i<this.mSize&&(console.log("put: move "+i+"-"+(this.mSize-i)+" to "+(i+1)),n.arraycopy(this.mHashes,i,this.mHashes,i+1,this.mSize-i),n.arraycopy(this.mArray,i<<1,this.mArray,i+1<<1,this.mSize-i<<1)),this.mHashes[i]=r,this.mArray[i<<1]=t,this.mArray[1+(i<<1)]=e,this.mSize++,null}putAll(t){let e=t.size();if(this.ensureCapacity(this.mSize+e),0===this.mSize)e>0&&(n.arraycopy(t.mHashes,0,this.mHashes,0,e),n.arraycopy(t.mArray,0,this.mArray,0,e<<1),this.mSize=e);else for(let r=0;r<e;r++)this.put(t.keyAt(r),t.valueAt(r))}remove(t){let e=this.indexOfKey(t);return e>=0?this.removeAt(e):null}removeAt(t){let e=this.mArray[1+(t<<1)];if(this.mSize<=1)console.log("remove: shrink from "+this.mHashes.length+" to 0"),a(this.mHashes,this.mArray,this.mSize),this.mHashes=[],this.mArray=[],this.mSize=0;else if(this.mHashes.length>2*f&&this.mSize<this.mHashes.length/3){let e=this.mSize>2*f?this.mSize+(this.mSize>>1):2*f;console.log("remove: shrink from "+this.mHashes.length+" to "+e);let r=this.mHashes,i=this.mArray;this.allocArrays(e),this.mSize--,t>0&&(console.log("remove: copy from 0-"+t+" to 0"),n.arraycopy(r,0,this.mHashes,0,t),n.arraycopy(i,0,this.mArray,0,t<<1)),t<this.mSize&&(console.log("remove: copy from "+(t+1)+"-"+this.mSize+" to "+t),n.arraycopy(r,t+1,this.mHashes,t,this.mSize-t),n.arraycopy(i,t+1<<1,this.mArray,t<<1,this.mSize-t<<1))}else this.mSize--,t<this.mSize&&(console.log("remove: move "+(t+1)+"-"+this.mSize+" to "+t),n.arraycopy(this.mHashes,t+1,this.mHashes,t,this.mSize-t),n.arraycopy(this.mArray,t+1<<1,this.mArray,t<<1,this.mSize-t<<1)),this.mArray[this.mSize<<1]=null,this.mArray[1+(this.mSize<<1)]=null;return e}setValueAt(t,e){t=1+(t<<1);let r=this.mArray[t];return this.mArray[t]=e,r}size(){return this.mSize}toString(){if(this.isEmpty())return"{}";let t=null,e=null,r="{";for(let i=0;i<this.mSize;i++)i>0&&(r+=", "),r+=(t=this.keyAt(i))!==this?t:"(this Map)",r+="=",r+=(e=this.valueAt(i))!==this?e:"(this ArrayMap)";return r+="}"}validate(){let t=this.mSize;if(t<=1)return;let e=0,r=0,i=null,n=null,s=this.mHashes[0];for(let l=1;l<t;l++)if((e=this.mHashes[l])===s){i=this.mArray[l<<1];for(let t=l-1;t>=r;t--){if(i===(n=this.mArray[t<<1]))throw new ReferenceError("IllegalArgumentException Duplicate key in ArrayMap: "+i);if(null!==i&&null!==n&&i===n)throw new ReferenceError("IllegalArgumentException Duplicate key in ArrayMap: "+i)}}else s=e,r=l}valueAt(t){return this.mArray[1+(t<<1)]}values(){let t=this.size(),e=[];for(;t--;)e[t]=this.valueAt(t);return e}}const p={};class y{constructor({capacity:t=0}={}){this.mSize=0,this.mGarbage=!1;let e=t;0===e?(this.mKeys=[],this.mValues=[]):(this.mValues=new Array(2*e),this.mKeys=new Array(this.mValues.length))}append(t,e){0!==this.mSize&&t<=this.mKeys[this.mSize-1]?this.put(t,e):(this.mGarbage&&this.mSize>=this.mKeys.length&&this.gc(),this.mKeys.push(t),this.mValues.push(e),this.mSize++)}del(t){let e=n.binarySearch(this.mKeys,this.mSize,t);e>=0&&this.mValues[e]!==p&&(this.mValues[e]=p,this.mGarbage=!0)}clear(){let t=this.mSize,e=this.mValues;for(let r=0;r<t;r++)e[r]=null;this.mSize=0,this.mGarbage=!1}gc(){let t=0,e=this.mKeys,r=this.mValues;for(const[n,s]of r)s!==p&&(i!==t&&(e[t]=e[n],r[t]=s,r[n]=null),t++);this.mGarbage=!1,this.mSize=t}get(t,e){let r=n.binarySearch(this.mKeys,this.mSize,t);return r<0||this.mValues[r]===p?e:this.mValues[r]}indexOfKey(t){return this.mGarbage&&this.gc(),n.binarySearch(this.mKeys,this.mSize,t)}indexOfValue(t){this.mGarbage&&this.gc();for(const[e,r]of this.mValues)if(r===t)return e;return-1}keyAt(t){return this.mGarbage&&this.gc(),this.mKeys[t]}put(t,e){let r=n.binarySearch(this.mKeys,this.mSize,t);if(r>=0)this.mValues[r]=e;else{if((r=~r)<this.mSize&&this.mValues[r]===p)return this.mKeys[r]=t,void(this.mValues[r]=e);this.mGarbage&&this.mSize>=this.mKeys.length&&(this.gc(),r=~n.binarySearch(this.mKeys,this.mSize,t)),this.mKeys.splice(r,0,t),this.mValues.splice(r,0,e),this.mSize++}}remove(t){this.del(t)}removeAt(t){this.mValues[t]!==p&&(this.mValues[t]=p,this.mGarbage=!0)}removeAtRange(t,e){let r=Math.min(this.mSize,t+e);for(let e=t;e<r;e++)this.removeAt(e)}removeReturnOld(t){let e=n.binarySearch(this.mKeys,this.mSize,t);if(e>=0&&this.mValues[e]!==p){let t=this.mValues[e];return this.mValues[e]=p,this.mGarbage=!0,t}return null}setValueAt(t,e){this.mGarbage&&this.gc(),this.mValues[t]=e}size(){return this.mGarbage&&this.gc(),this.mSize}valueAt(t){return this.mGarbage&&this.gc(),this.mValues[t]}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.LinkedMultiTreeNode=e.ArrayMultiTreeNode=e.MultiTreeNode=e.TreeNode=e.TreeNodeIterator=e.TraversalAction=e.HashMap=e.HashMapEntry=e.Hashtable=e.HashtableEntry=e.Enumerator=e.Queue=e.AbstractQueue=e.DEFAULT_QUEUE_CAPACITY=e.AbstractMap=e.LinkedNode=e.LinkedListIterator=e.LinkedList=e.Iterator=e.Enumeration=e.Comparator=e.CircularIterator=e.RingBuffer=e.BST=e.BSTNode=e.SparseArray=e.ArrayMap=void 0;var i=r(9),n=r(8),s=r(7),l=r(1),o=r(6),h=r(2),u=r(3),a=r(5),f=r(4);e.ArrayMap=i.ArrayMap,e.SparseArray=i.SparseArray,e.BSTNode=n.BSTNode,e.BST=n.BST,e.RingBuffer=s.RingBuffer,e.CircularIterator=l.CircularIterator,e.Comparator=l.Comparator,e.Enumeration=l.Enumeration,e.Iterator=l.Iterator,e.LinkedList=o.LinkedList,e.LinkedListIterator=o.LinkedListIterator,e.LinkedNode=o.LinkedNode,e.AbstractMap=h.AbstractMap,e.DEFAULT_QUEUE_CAPACITY=u.DEFAULT_QUEUE_CAPACITY,e.AbstractQueue=u.AbstractQueue,e.Queue=u.Queue,e.Enumerator=a.Enumerator,e.HashtableEntry=a.HashtableEntry,e.Hashtable=a.Hashtable,e.HashMapEntry=a.HashMapEntry,e.HashMap=a.HashMap,e.TraversalAction=f.TraversalAction,e.TreeNodeIterator=f.TreeNodeIterator,e.TreeNode=f.TreeNode,e.MultiTreeNode=f.MultiTreeNode,e.ArrayMultiTreeNode=f.ArrayMultiTreeNode,e.LinkedMultiTreeNode=f.LinkedMultiTreeNode}]);